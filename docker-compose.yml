---
version: "3.7"

services:
  search-service:
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/search_service:latest
    build:
      dockerfile: docker/search-service/Dockerfile
    ports: ["8000:8000"]
    depends_on:
      localstack:
        condition: service_healthy
    env_file:
      - docker-compose.env

  localstack:
    image: localstack/localstack:1.4.0
    environment:
      AWS_DEFAULT_REGION: eu-west-1
      SERVICES: es, secretsmanager
    networks:
      default:
        aliases:
          - search-service.eu-west-1.es.localhost.localstack.cloud
    volumes:
      - "./scripts/localstack/init:/etc/localstack/init/ready.d"
      - "./scripts/localstack/wait:/scripts/wait"
    healthcheck:
      test: bash /scripts/wait/healthcheck.sh
      interval: 30s
      timeout: 5s
      retries: 8

  gosec:
    image: securego/gosec:latest
    working_dir: /app
    volumes:
      - .:/app
    command: -exclude-dir=.gocache /app/...

  go-lint:
    image: golangci/golangci-lint:v1.54.2
    working_dir: /go/src/app
    volumes:
      - ./:/go/src/app
      - ./.cache/golangci-lint/v1.53.3:/root/.cache
    command: golangci-lint run -v --timeout 5m

  postgres:
    image: postgres:15.4
    ports: ["5434:5432"]
    command: postgres
    environment:
      POSTGRES_USER: searchservice
      POSTGRES_PASSWORD: searchservice
      POSTGRES_DB: searchservice
      PGPASSWORD: searchservice

  test-runner:
    build:
      context: docker/test-runner/
    command: gotestsum --junitfile test-results/unit-tests.xml -- ./... -coverprofile=test-results/test-coverage.txt
    working_dir: /go/src/app
    volumes:
      - ./:/go/src/app
      - ./.gocache:/go/pkg/mod
    env_file:
      - docker-compose.env

  swagger-ui:
    image: swaggerapi/swagger-ui
    environment:
      SWAGGER_JSON: /tmp/openapi.yml
    volumes:
      - ./docs/openapi/openapi.yml:/tmp/openapi.yml
    ports:
      - 8383:8080

  swagger-generate:
    image: quay.io/goswagger/swagger
    environment:
      GO111MODULE: "off"
      GOPATH: /go
    volumes:
      - ./:/go/src
    working_dir: /go/src
    entrypoint: ["swagger", "generate", "spec", "-o", "/go/src/docs/openapi/openapi.yml", "--scan-models"]

  trivy:
    image: aquasec/trivy:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.trivy-cache:/root/.cache
      - ./test-results:/test-results
